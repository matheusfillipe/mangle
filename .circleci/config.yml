version: 2.1

commands:
  cross-build:
    parameters:
      target:
        default: "x86_64-unknown-linux-gnu"
        type: string
    steps:
      - run: 
          name: Building <<parameters.target>>
          command: |
            systemctl 
            cross build --release --target <<parameters.target>>
      - run: 
          name: Compressing <<parameters.target>>
          command: |
            mkdir -p "<<parameters.target>>"
            [ -e "target/<<parameters.target>>/release/mangle" ] && cp "target/<<parameters.target>>/release/mangle" "<<parameters.target>>/"
            [ -e "target/<<parameters.target>>/release/mangle.exe" ] && cp "target/<<parameters.target>>/release/mangle.exe" "<<parameters.target>>/"
            zip "mangle-<<parameters.target>>.zip" <<parameters.target>>/*
        
workflows:
  build_and_deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/

      - pipy-deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
      - crates-deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
      - gh-release:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/

jobs:
  build-and-test:
    docker:
      - image: cimg/rust:1.59.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - run:
          name: Coverage Setup
          command: |
            sudo apt update
            sudo apt install -y llvm
            curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            rustup component add llvm-tools-preview
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: |
            export RUSTC_BOOTSTRAP=1
            export RUSTFLAGS="-Zinstrument-coverage"
            export LLVM_PROFILE_FILE="mangle-%p-%m.profraw"
            cargo test
      - run:
          name: Run coverage
          command: |
            ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
            ./codecov -f lcov.info

  pipy-deploy:
    docker:
      - image: ghcr.io/pyo3/maturin
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: pypi deploy
          command: |
            ./version_pump.sh
            cd python/
            maturin publish


  crates-deploy:
    docker:
      - image: cimg/rust:1.59.0
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Deploy
          command: |
            ./version_pump.sh
            cargo publish --allow-dirty

  gh-release:
    machine:
      image: ubuntu-2004:current
      resource_class: large
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Cargo setup
          command: |
            export RUST_VERSION=1.59.0
            curl -O https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
            chmod +x rustup-init
            ./rustup-init -y --no-modify-path --default-toolchain $RUST_VERSION
            echo "source $HOME/.cargo/env" >> ~/.bashrc
            source ~/.bashrc
            rm rustup-init
            rustc --version
            cargo --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Cross install
          command: |
            sudo apt update
            sudo apt install -y docker
            cargo install cross
            ./version_pump.sh
      - cross-build:
          target: x86_64-unknown-linux-gnu
      - cross-build:
          target: aarch64-unknown-linux-gnu
      - cross-build:
          target: x86_64-pc-windows-gnu
      - cross-build:
          target: arm-linux-androideabi
      - cross-build:
          target: armv7-linux-androideabi
      - run:
          name: ghr install
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.14.0/ghr_v0.14.0_linux_amd64.tar.gz
            tar -xvzf ghr_*.tar.gz
            mv ghr_*_amd64 ghr
      - run:
          name: Submitting releases to Github
          command: |
            mkdir -p release
            mv *.zip release/
            export VERSION=$(git describe --tags --abbrev=0)
            ./ghr/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./release/
