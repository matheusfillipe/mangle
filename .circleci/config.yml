version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/

      - pipy-deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
      - crates-deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
      - gh-release:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/

jobs:
  build-and-test:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - run:
          name: Coverage Setup
          command: |
            curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            export RUSTC_BOOTSTRAP=1
            rustup component add llvm-tools-preview
            export RUSTFLAGS="-Zinstrument-coverage"
            export LLVM_PROFILE_FILE="mangle-%p-%m.profraw"
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test
      - run:
          name: Run coverage
          command: |
            ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
            ./codecov -f lcov.info

  pipy-deploy:
    docker:
      - image: ghcr.io/pyo3/maturin
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: pypi deploy
          command: maturin publish


  crates-deploy:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Deploy
          command: cargo publish --allow-dirty

  gh-release:
    docker:
      - image: circleci/rust
    steps:
      - checkout
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          command: cargo publish --allow-dirty
      - run:
          name: ghr install
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.14.0/ghr_v0.14.0_linux_amd64.tar.gz
            tar -xvzf ghr_*.tar.gz
            mv ghr_*_amd64 ghr
      - run:
          name: Github release
          command: |
            rustup target add x86_64-unknown-linux-gnu
            rustup target add armv7-unknown-linux-gnueabihf
            rustup target add armv7-unknown-linux-gnueabihf
            export VERSION=$(git describe --tags --abbrev=0)
            ./ghr/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./release/
